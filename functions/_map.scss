// Example:
//
// $map1: ( a: (x: 'x') );
// $map2: ( a: (y: 'y') );
//
// map-deep-merge($map1, $map2)
// => ( a: (x: 'x', y: 'y') )
@function map-deep-merge($map, $sub-map) {
  @if not (type-of($map) == map and type-of($sub-map) == map) {
    @warn 'Params for `map-deep-merge` require map data.';
    @return null;
  }

  @each $key, $value in $sub-map {
    $original: map-get($map, $key);

    @if type-of($original) == map and type-of($value) == map {
      $value: map-deep-merge($original, $value);
    }

    $map: map-merge($map, ($key: $value));
  }

  @return $map;
}


// Example:
//
// $map: (
//   a: (
//     b: (
//       c: 'Good job!'
//     )
//   )
// );
//
// Before: map-get(map-get(map-get($map, a), b), c)
// After: map-find($map, 'a.b.c')
@function map-find($map, $keys) {
  @while str-index($keys, '.') {
    $index: str-index($keys, '.');

    // Child elements
    $map: map-get($map, str-slice($keys, 0, $index - 1));
    @if type-of($map) != map {
      @return null;
    }

    // Rest keys
    $keys: str-slice($keys, $index + 1);
  }

  @return map-get($map, $keys);
}
